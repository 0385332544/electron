name: GitHub Actions Demo
on: [push]
jobs:
  osx-testing-x64:
    runs-on:  macos-11-xl
    steps:
      - name: Check out Electron
        uses: actions/checkout@v2
      - name: Get and setup depot tools
        run: |
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git
          echo "$PWD/depot_tools" >> $GITHUB_PATH
      - name: Check amount of disk space available
        run: df -h
      - name: Gclient sync
        run: |
            gclient config \
              --name "src/electron" \
              --unmanaged \
              "https://github.com/electron/electron"
            ELECTRON_USE_THREE_WAY_MERGE_FOR_PATCHES=1 gclient sync --with_branch_heads --with_tags
            if [ "$IS_RELEASE" != "true" ]; then
              # Re-export all the patches to check if there were changes.
              python src/electron/script/export_all_patches.py src/electron/patches/config.json
              cd src/electron
              git update-index --refresh || true
              if ! git diff-index --quiet HEAD --; then
                # There are changes to the patches. Make a git commit with the updated patches
                git add patches
                GIT_COMMITTER_NAME="PatchUp" GIT_COMMITTER_EMAIL="73610968+patchup[bot]@users.noreply.github.com" git commit -m "chore: update patches" --author="PatchUp <73610968+patchup[bot]@users.noreply.github.com>"
                # Export it
                mkdir -p ../../patches
                git format-patch -1 --stdout --keep-subject --no-stat --full-index > ../../patches/update-patches.patch
                if (node ./script/push-patch.js 2> /dev/null > /dev/null); then
                  echo
                  echo "======================================================================"
                  echo "Changes to the patches when applying, we have auto-pushed the diff to the current branch"
                  echo "A new CI job will kick off shortly"
                  echo "======================================================================"
                  exit 1
                else
                  echo
                  echo "======================================================================"
                  echo "There were changes to the patches when applying."
                  echo "Check the CI artifacts for a patch you can apply to fix it."
                  echo "======================================================================"
                  exit 1
                fi
              fi
            fi   
      - run: echo "üçè This job's status is ${{ job.status }}."
